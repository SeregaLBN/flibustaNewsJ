// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.alg.flibusta.latest.web;

import com.alg.flibusta.latest.domain.NewItems;
import com.alg.flibusta.latest.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<NewItems, String> ApplicationConversionServiceFactoryBean.getNewItemsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.alg.flibusta.latest.domain.NewItems, java.lang.String>() {
            public String convert(NewItems newItems) {
                return new StringBuilder().append(newItems.getUpdated()).append(' ').append(newItems.getIdTagBook()).append(' ').append(newItems.getTitle()).append(' ').append(newItems.getAuthor()).toString();
            }
        };
    }
    
    public Converter<Long, NewItems> ApplicationConversionServiceFactoryBean.getIdToNewItemsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.alg.flibusta.latest.domain.NewItems>() {
            public com.alg.flibusta.latest.domain.NewItems convert(java.lang.Long id) {
                return NewItems.findNewItems(id);
            }
        };
    }
    
    public Converter<String, NewItems> ApplicationConversionServiceFactoryBean.getStringToNewItemsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.alg.flibusta.latest.domain.NewItems>() {
            public com.alg.flibusta.latest.domain.NewItems convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NewItems.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getNewItemsToStringConverter());
        registry.addConverter(getIdToNewItemsConverter());
        registry.addConverter(getStringToNewItemsConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
