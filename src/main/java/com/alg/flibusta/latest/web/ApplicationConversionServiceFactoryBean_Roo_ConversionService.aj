// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.alg.flibusta.latest.web;

import com.alg.flibusta.latest.domain.NewItem;
import com.alg.flibusta.latest.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<NewItem, String> ApplicationConversionServiceFactoryBean.getNewItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.alg.flibusta.latest.domain.NewItem, java.lang.String>() {
            public String convert(NewItem newItem) {
                return new StringBuilder().append(newItem.getUpdated()).append(' ').append(newItem.getIdTagBook()).append(' ').append(newItem.getTitle()).append(' ').append(newItem.getAuthor()).toString();
            }
        };
    }
    
    public Converter<Long, NewItem> ApplicationConversionServiceFactoryBean.getIdToNewItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.alg.flibusta.latest.domain.NewItem>() {
            public com.alg.flibusta.latest.domain.NewItem convert(java.lang.Long id) {
                return NewItem.findNewItem(id);
            }
        };
    }
    
    public Converter<String, NewItem> ApplicationConversionServiceFactoryBean.getStringToNewItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.alg.flibusta.latest.domain.NewItem>() {
            public com.alg.flibusta.latest.domain.NewItem convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), NewItem.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getNewItemToStringConverter());
        registry.addConverter(getIdToNewItemConverter());
        registry.addConverter(getStringToNewItemConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
